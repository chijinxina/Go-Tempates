// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MTask.proto

//服务端流式grpc

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MTaskRequest struct {
	AgentName            string   `protobuf:"bytes,1,opt,name=agentName,proto3" json:"agentName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MTaskRequest) Reset()         { *m = MTaskRequest{} }
func (m *MTaskRequest) String() string { return proto.CompactTextString(m) }
func (*MTaskRequest) ProtoMessage()    {}
func (*MTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebae7af75d528729, []int{0}
}

func (m *MTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MTaskRequest.Unmarshal(m, b)
}
func (m *MTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MTaskRequest.Marshal(b, m, deterministic)
}
func (m *MTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MTaskRequest.Merge(m, src)
}
func (m *MTaskRequest) XXX_Size() int {
	return xxx_messageInfo_MTaskRequest.Size(m)
}
func (m *MTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MTaskRequest proto.InternalMessageInfo

func (m *MTaskRequest) GetAgentName() string {
	if m != nil {
		return m.AgentName
	}
	return ""
}

type MTaskResponse struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MTaskResponse) Reset()         { *m = MTaskResponse{} }
func (m *MTaskResponse) String() string { return proto.CompactTextString(m) }
func (*MTaskResponse) ProtoMessage()    {}
func (*MTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebae7af75d528729, []int{1}
}

func (m *MTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MTaskResponse.Unmarshal(m, b)
}
func (m *MTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MTaskResponse.Marshal(b, m, deterministic)
}
func (m *MTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MTaskResponse.Merge(m, src)
}
func (m *MTaskResponse) XXX_Size() int {
	return xxx_messageInfo_MTaskResponse.Size(m)
}
func (m *MTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MTaskResponse proto.InternalMessageInfo

func (m *MTaskResponse) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func init() {
	proto.RegisterType((*MTaskRequest)(nil), "serverside.stream.MTaskRequest")
	proto.RegisterType((*MTaskResponse)(nil), "serverside.stream.MTaskResponse")
}

func init() { proto.RegisterFile("MTask.proto", fileDescriptor_ebae7af75d528729) }

var fileDescriptor_ebae7af75d528729 = []byte{
	// 163 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xf6, 0x0d, 0x49, 0x2c,
	0xce, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x2c, 0x4e, 0x2d, 0x2a, 0x4b, 0x2d, 0x2a,
	0xce, 0x4c, 0x49, 0xd5, 0x2b, 0x2e, 0x29, 0x4a, 0x4d, 0xcc, 0x55, 0xd2, 0xe1, 0xe2, 0x01, 0xab,
	0x08, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x92, 0xe1, 0xe2, 0x4c, 0x4c, 0x4f, 0xcd, 0x2b,
	0xf1, 0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x42, 0x08, 0x28, 0x69, 0x70,
	0xf1, 0x42, 0x55, 0x17, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0x89, 0x73, 0xb1, 0x97, 0x24, 0x16,
	0x67, 0xc7, 0x67, 0xa6, 0x40, 0x15, 0xb3, 0x81, 0xb8, 0x9e, 0x29, 0x46, 0xf1, 0x50, 0x73, 0x83,
	0x53, 0x8b, 0xca, 0x32, 0x93, 0x53, 0x85, 0xfc, 0xb9, 0x38, 0xdc, 0x53, 0x4b, 0xc0, 0x42, 0x42,
	0xf2, 0x7a, 0x18, 0xee, 0xd0, 0x43, 0x76, 0x84, 0x94, 0x02, 0x6e, 0x05, 0x10, 0x7b, 0x0d, 0x18,
	0x93, 0xd8, 0xc0, 0x5e, 0x32, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x89, 0xbc, 0x87, 0x70, 0xe1,
	0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MTaskServiceClient is the client API for MTaskService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MTaskServiceClient interface {
	//流式响应
	GetMTask(ctx context.Context, in *MTaskRequest, opts ...grpc.CallOption) (MTaskService_GetMTaskClient, error)
}

type mTaskServiceClient struct {
	cc *grpc.ClientConn
}

func NewMTaskServiceClient(cc *grpc.ClientConn) MTaskServiceClient {
	return &mTaskServiceClient{cc}
}

func (c *mTaskServiceClient) GetMTask(ctx context.Context, in *MTaskRequest, opts ...grpc.CallOption) (MTaskService_GetMTaskClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MTaskService_serviceDesc.Streams[0], "/serverside.stream.MTaskService/GetMTask", opts...)
	if err != nil {
		return nil, err
	}
	x := &mTaskServiceGetMTaskClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MTaskService_GetMTaskClient interface {
	Recv() (*MTaskResponse, error)
	grpc.ClientStream
}

type mTaskServiceGetMTaskClient struct {
	grpc.ClientStream
}

func (x *mTaskServiceGetMTaskClient) Recv() (*MTaskResponse, error) {
	m := new(MTaskResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MTaskServiceServer is the server API for MTaskService service.
type MTaskServiceServer interface {
	//流式响应
	GetMTask(*MTaskRequest, MTaskService_GetMTaskServer) error
}

// UnimplementedMTaskServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMTaskServiceServer struct {
}

func (*UnimplementedMTaskServiceServer) GetMTask(req *MTaskRequest, srv MTaskService_GetMTaskServer) error {
	return status.Errorf(codes.Unimplemented, "method GetMTask not implemented")
}

func RegisterMTaskServiceServer(s *grpc.Server, srv MTaskServiceServer) {
	s.RegisterService(&_MTaskService_serviceDesc, srv)
}

func _MTaskService_GetMTask_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(MTaskRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MTaskServiceServer).GetMTask(m, &mTaskServiceGetMTaskServer{stream})
}

type MTaskService_GetMTaskServer interface {
	Send(*MTaskResponse) error
	grpc.ServerStream
}

type mTaskServiceGetMTaskServer struct {
	grpc.ServerStream
}

func (x *mTaskServiceGetMTaskServer) Send(m *MTaskResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _MTaskService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "serverside.stream.MTaskService",
	HandlerType: (*MTaskServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetMTask",
			Handler:       _MTaskService_GetMTask_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "MTask.proto",
}
